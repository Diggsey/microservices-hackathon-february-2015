// Generated by LiveScript 1.3.1
(function(){
  var combo, clockElem, boardSize, cellSize, arenaElem, paper, testData, draw;
  combo = new Combo("http://52.16.7.112:8000");
  combo.use(["state", "ArenaClock"]);
  combo.listen("state", function(data){});
  clockElem = document.getElementById("clock");
  combo.listen("ArenaClock", function(data){
    return clockElem.replaceChild(document.createTextNode(data.tick), clockElem.firstChild);
  });
  boardSize = [20, 20];
  cellSize = 20;
  arenaElem = document.getElementById("arena");
  paper = Raphael(400, 100, boardSize[0] * cellSize, boardSize[1] * cellSize);
  testData = {
    "moves": [
      {
        "id": "player1",
        "coordinates": [1, 1]
      }, {
        "id": "player2",
        "coordinates": [10, 10]
      }, {
        "id": "player3",
        "coordinates": [15, 15]
      }
    ]
  };
  draw = function(data){
    var i$, ref$, len$, robot, pos, results$ = [];
    arenaElem.textContent = JSON.stringify(data, null, "  ");
    paper.clear();
    paper.rect(0, 0, boardSize[0] * cellSize, boardSize[1] * cellSize).attr("fill", '#000');
    for (i$ = 0, len$ = (ref$ = data.moves).length; i$ < len$; ++i$) {
      robot = ref$[i$];
      pos = robot.coordinates;
      console.log(pos);
      results$.push(paper.rect(pos[0] * cellSize, pos[1] * cellSize, cellSize, cellSize).attr("fill", '#f00'));
    }
    return results$;
  };
  combo.listen("state", draw);
  draw(testData);
}).call(this);
